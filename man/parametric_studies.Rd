% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parametric.R
\name{parametric_studies}
\alias{parametric_studies}
\title{Run parametric analyses}
\usage{
parametric_studies(
  original_cases,
  parameterization,
  case_colname = ReboundTools::eeu_base_params$case
)
}
\arguments{
\item{original_cases}{A data frame with baseline data from which parametric studies are desired.
This data frame is expected to contain 1 row, a single case.}

\item{parameterization}{A named list.}

\item{case_colname}{The name of the column of cases. Default is \code{ReboundTools::eeu_base_params$case}.}
}
\value{
A data frame containing results of parametric studies.
}
\description{
After defining a base case for rebound analyses,
parametric analyses and sensitivity studies are
often helpful.
This function provides a convenient way to do parametric studies.
}
\details{
\code{original_cases} must have the same structure as the example data frames in this package.
See the file at \code{sample_eeu_data_path()}.
Failures will occur if \code{original_cases} contains columns calculated by \code{rebound_analysis()}.

\code{parameterization} must have structure where
each element is named for a variable in \code{original_cases},
Values of each item in the list should be numerical values to be swept.
Note that the original value of each parameter (in \code{original_cases})
will not be inserted into the \code{parameterization} lists,
so be sure to include that value, if desired.
\code{expand.grid()} is called on the entries of \code{parameterization}
to cover the union of all parameter values in the parametric study.
}
\examples{
car_case <- load_eeu_data() \%>\% 
  dplyr::filter(.data[[ReboundTools::eeu_base_params$case]] == "Car")
params <- list(k = seq(0, 2, by = 1), p_E_engr_units = seq(1.5, 2.5, by = 0.25))
res <- parametric_studies(car_case, params)
dplyr::glimpse(res)
}
